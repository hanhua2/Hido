{"ast":null,"code":"/*!\nFullCalendar v5.10.1\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './vdom.js';\nimport { __extends, __assign } from 'tslib';\nimport { render, createElement, CalendarRoot, CustomContentRenderContext, CalendarContent, unmountComponentAtNode, flushToDom, DelayedRunner, CalendarDataManager, isArraysEqual, applyStyleProp, CalendarApi } from '@fullcalendar/common';\nexport * from '@fullcalendar/common';\n\nvar Calendar =\n/** @class */\nfunction (_super) {\n  __extends(Calendar, _super);\n\n  function Calendar(el, optionOverrides) {\n    if (optionOverrides === void 0) {\n      optionOverrides = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.isRendering = false;\n    _this.isRendered = false;\n    _this.currentClassNames = [];\n    _this.customContentRenderId = 0; // will affect custom generated classNames?\n\n    _this.handleAction = function (action) {\n      // actions we know we want to render immediately\n      switch (action.type) {\n        case 'SET_EVENT_DRAG':\n        case 'SET_EVENT_RESIZE':\n          _this.renderRunner.tryDrain();\n\n      }\n    };\n\n    _this.handleData = function (data) {\n      _this.currentData = data;\n\n      _this.renderRunner.request(data.calendarOptions.rerenderDelay);\n    };\n\n    _this.handleRenderRequest = function () {\n      if (_this.isRendering) {\n        _this.isRendered = true;\n        var currentData_1 = _this.currentData;\n        render(createElement(CalendarRoot, {\n          options: currentData_1.calendarOptions,\n          theme: currentData_1.theme,\n          emitter: currentData_1.emitter\n        }, function (classNames, height, isHeightAuto, forPrint) {\n          _this.setClassNames(classNames);\n\n          _this.setHeight(height);\n\n          return createElement(CustomContentRenderContext.Provider, {\n            value: _this.customContentRenderId\n          }, createElement(CalendarContent, __assign({\n            isHeightAuto: isHeightAuto,\n            forPrint: forPrint\n          }, currentData_1)));\n        }), _this.el);\n      } else if (_this.isRendered) {\n        _this.isRendered = false;\n        unmountComponentAtNode(_this.el);\n\n        _this.setClassNames([]);\n\n        _this.setHeight('');\n      }\n\n      flushToDom();\n    };\n\n    _this.el = el;\n    _this.renderRunner = new DelayedRunner(_this.handleRenderRequest);\n    new CalendarDataManager({\n      optionOverrides: optionOverrides,\n      calendarApi: _this,\n      onAction: _this.handleAction,\n      onData: _this.handleData\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Calendar.prototype, \"view\", {\n    get: function () {\n      return this.currentData.viewApi;\n    } // for public API\n    ,\n    enumerable: false,\n    configurable: true\n  });\n\n  Calendar.prototype.render = function () {\n    var wasRendering = this.isRendering;\n\n    if (!wasRendering) {\n      this.isRendering = true;\n    } else {\n      this.customContentRenderId += 1;\n    }\n\n    this.renderRunner.request();\n\n    if (wasRendering) {\n      this.updateSize();\n    }\n  };\n\n  Calendar.prototype.destroy = function () {\n    if (this.isRendering) {\n      this.isRendering = false;\n      this.renderRunner.request();\n    }\n  };\n\n  Calendar.prototype.updateSize = function () {\n    _super.prototype.updateSize.call(this);\n\n    flushToDom();\n  };\n\n  Calendar.prototype.batchRendering = function (func) {\n    this.renderRunner.pause('batchRendering');\n    func();\n    this.renderRunner.resume('batchRendering');\n  };\n\n  Calendar.prototype.pauseRendering = function () {\n    this.renderRunner.pause('pauseRendering');\n  };\n\n  Calendar.prototype.resumeRendering = function () {\n    this.renderRunner.resume('pauseRendering', true);\n  };\n\n  Calendar.prototype.resetOptions = function (optionOverrides, append) {\n    this.currentDataManager.resetOptions(optionOverrides, append);\n  };\n\n  Calendar.prototype.setClassNames = function (classNames) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      var classList = this.el.classList;\n\n      for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {\n        var className = _a[_i];\n        classList.remove(className);\n      }\n\n      for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {\n        var className = classNames_1[_b];\n        classList.add(className);\n      }\n\n      this.currentClassNames = classNames;\n    }\n  };\n\n  Calendar.prototype.setHeight = function (height) {\n    applyStyleProp(this.el, 'height', height);\n  };\n\n  return Calendar;\n}(CalendarApi);\n\nexport { Calendar };","map":{"version":3,"mappings":"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","names":["__extends","el","optionOverrides","_super","_this","action","type","renderRunner","tryDrain","data","currentData","request","calendarOptions","rerenderDelay","isRendering","isRendered","render","createElement","CalendarRoot","options","currentData_1","theme","emitter","classNames","height","isHeightAuto","forPrint","setClassNames","setHeight","CustomContentRenderContext","Provider","value","customContentRenderId","CalendarContent","__assign","unmountComponentAtNode","flushToDom","DelayedRunner","handleRenderRequest","CalendarDataManager","calendarApi","onAction","handleAction","onData","handleData","Object","Calendar","viewApi","wasRendering","updateSize","call","func","pause","resume","append","currentDataManager","resetOptions","isArraysEqual","currentClassNames","classList","_i","className","remove","_b","add","applyStyleProp","CalendarApi"],"sources":["D:\\Nus\\sem2\\IT5007\\Project\\hido-main\\node_modules\\@fullcalendar\\core\\src\\Calendar.tsx"],"sourcesContent":["import {\n  CalendarOptions, Action, CalendarContent, render, createElement, DelayedRunner, CssDimValue, applyStyleProp,\n  CalendarApi, CalendarRoot, isArraysEqual, CalendarDataManager, CalendarData,\n  CustomContentRenderContext, flushToDom, unmountComponentAtNode,\n} from '@fullcalendar/common'\n\nexport class Calendar extends CalendarApi {\n  currentData: CalendarData\n  renderRunner: DelayedRunner\n  el: HTMLElement\n  isRendering = false\n  isRendered = false\n  currentClassNames: string[] = []\n  customContentRenderId = 0 // will affect custom generated classNames?\n\n  get view() { return this.currentData.viewApi } // for public API\n\n  constructor(el: HTMLElement, optionOverrides: CalendarOptions = {}) {\n    super()\n\n    this.el = el\n    this.renderRunner = new DelayedRunner(this.handleRenderRequest)\n\n    new CalendarDataManager({ // eslint-disable-line no-new\n      optionOverrides,\n      calendarApi: this,\n      onAction: this.handleAction,\n      onData: this.handleData,\n    })\n  }\n\n  handleAction = (action: Action) => {\n    // actions we know we want to render immediately\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n      case 'SET_EVENT_RESIZE':\n        this.renderRunner.tryDrain()\n    }\n  }\n\n  handleData = (data: CalendarData) => {\n    this.currentData = data\n    this.renderRunner.request(data.calendarOptions.rerenderDelay)\n  }\n\n  handleRenderRequest = () => {\n    if (this.isRendering) {\n      this.isRendered = true\n      let { currentData } = this\n\n      render(\n        <CalendarRoot options={currentData.calendarOptions} theme={currentData.theme} emitter={currentData.emitter}>\n          {(classNames, height, isHeightAuto, forPrint) => {\n            this.setClassNames(classNames)\n            this.setHeight(height)\n\n            return (\n              <CustomContentRenderContext.Provider value={this.customContentRenderId}>\n                <CalendarContent\n                  isHeightAuto={isHeightAuto}\n                  forPrint={forPrint}\n                  {...currentData}\n                />\n              </CustomContentRenderContext.Provider>\n            )\n          }}\n        </CalendarRoot>,\n        this.el,\n      )\n    } else if (this.isRendered) {\n      this.isRendered = false\n      unmountComponentAtNode(this.el)\n      this.setClassNames([])\n      this.setHeight('')\n    }\n\n    flushToDom()\n  }\n\n  render() {\n    let wasRendering = this.isRendering\n\n    if (!wasRendering) {\n      this.isRendering = true\n    } else {\n      this.customContentRenderId += 1\n    }\n\n    this.renderRunner.request()\n\n    if (wasRendering) {\n      this.updateSize()\n    }\n  }\n\n  destroy() {\n    if (this.isRendering) {\n      this.isRendering = false\n      this.renderRunner.request()\n    }\n  }\n\n  updateSize() {\n    super.updateSize()\n    flushToDom()\n  }\n\n  batchRendering(func) {\n    this.renderRunner.pause('batchRendering')\n    func()\n    this.renderRunner.resume('batchRendering')\n  }\n\n  pauseRendering() { // available to plugins\n    this.renderRunner.pause('pauseRendering')\n  }\n\n  resumeRendering() { // available to plugins\n    this.renderRunner.resume('pauseRendering', true)\n  }\n\n  resetOptions(optionOverrides, append?) {\n    this.currentDataManager.resetOptions(optionOverrides, append)\n  }\n\n  setClassNames(classNames: string[]) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      let { classList } = this.el\n\n      for (let className of this.currentClassNames) {\n        classList.remove(className)\n      }\n\n      for (let className of classNames) {\n        classList.add(className)\n      }\n\n      this.currentClassNames = classNames\n    }\n  }\n\n  setHeight(height: CssDimValue) {\n    applyStyleProp(this.el, 'height', height)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
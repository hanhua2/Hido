{"ast":null,"code":"var _jsxFileName = \"/hido/src/component/Todos/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction Todo() {\n  _s();\n\n  const [todos, setTodo] = useState([]);\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storageTodos) {\n      setTodo(storageTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodo([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodo(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodo(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"todo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todo Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"OH5ksfY+I6D5opxB2vN2SMvyvL4=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/hido/src/component/Todos/Todo.js"],"names":["React","useEffect","useState","TodoForm","TodoList","LOCAL_STORAGE_KEY","Todo","todos","setTodo","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,iBAArB,CAAX,CAArB;;AACA,QAAII,YAAJ,EAAkB;AACdD,MAAAA,OAAO,CAACC,YAAD,CAAP;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACE,OAAb,CAAqBT,iBAArB,EAAwCK,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASS,OAAT,CAAiBC,IAAjB,EAAuB;AACnBT,IAAAA,OAAO,CAAC,CAACS,IAAD,EAAO,GAAGV,KAAV,CAAD,CAAP;AACH;;AAED,WAASW,cAAT,CAAwBC,EAAxB,EAA4B;AACxBX,IAAAA,OAAO,CACLD,KAAK,CAACa,GAAN,CAAUH,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGF,IADE;AAELI,UAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAFZ,SAAP;AAID;;AACD,aAAOJ,IAAP;AACD,KARD,CADK,CAAP;AAWD;;AAED,WAASK,UAAT,CAAoBH,EAApB,EAAwB;AACtBX,IAAAA,OAAO,CAACD,KAAK,CAACgB,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAP;AACD;;AAGH,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAIH;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAIT;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC;;GAhDID,I;;KAAAA,I;AAmDL,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\"; \r\n\r\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\r\n\r\nfunction Todo() {\r\n    const [todos, setTodo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (storageTodos) {\r\n            setTodo(storageTodos);\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n    }, [todos]) \r\n\r\n    function addTodo(todo) {\r\n        setTodo([todo, ...todos]);\r\n    }\r\n\r\n    function toggleComplete(id) {\r\n        setTodo(\r\n          todos.map(todo => {\r\n            if (todo.id === id) {\r\n              return {\r\n                ...todo,\r\n                completed: !todo.completed\r\n              };\r\n            }\r\n            return todo;\r\n          })\r\n        );\r\n      }\r\n\r\n      function removeTodo(id) {\r\n        setTodo(todos.filter(todo => todo.id !== id));\r\n      }\r\n    \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <header className=\"todo-header\">\r\n                <h2>Todo Task List</h2> \r\n                <TodoForm addTodo = {addTodo}/>\r\n                <TodoList todos = {todos}/>\r\n            </header>\r\n            \r\n        </div> \r\n        );\r\n    }\r\n    \r\n\r\n    export default Todo; "]},"metadata":{},"sourceType":"module"}
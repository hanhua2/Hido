{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liuni\\\\Documents\\\\GitHub\\\\hido\\\\src\\\\context\\\\CalendarContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SET_DATE = \"SET_DATE\";\nconst SET_TASK = \"SET_TASK\";\nconst SAVE_TASK = \"SAVE_TASK\";\nconst DELETE_TASK = \"DELETE_TASK\";\n\nconst getDatabase = () => {\n  let db = localStorage.getItem(\"$calendar_db\");\n\n  if (!db) {\n    db = [];\n    setDatabase(db);\n  } else {\n    db = JSON.parse(db);\n    db.map(task => task.date = new Date(task.date));\n  }\n\n  return db;\n};\n\nconst setDatabase = db => {\n  localStorage.setItem(\"$calendar_db\", JSON.stringify(db));\n};\n\nexport const CalendarContext = /*#__PURE__*/createContext();\nexport const sameDay = (a, b) => {\n  return a.getDate() === b.getDate() && a.getMonth() === b.getMonth() && a.getFullYear() === b.getFullYear();\n};\n\nfunction CalendarState(props) {\n  _s();\n\n  const initialState = {\n    date: new Date(),\n    days: [],\n    task: null\n  };\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case SET_DATE:\n        // Set current date\n        const date = action.payload; // Calendar Start Day\n\n        const d1 = new Date(date.getFullYear(), date.getMonth(), 1);\n        d1.setDate(d1.getDate() - (d1.getDay() === 0 ? 7 : d1.getDay())); // Calendart End Day\n\n        const d2 = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        if (d2.getDay() !== 0) d2.setDate(d2.getDate() + (7 - d2.getDay()));\n        const db = getDatabase();\n        const days = [];\n\n        do {\n          // Obtain tasks\n          d1.setDate(d1.getDate() + 1); // iterate            \n\n          days.push({\n            date: new Date(d1.getTime()),\n            tasks: db.filter(task => sameDay(d1, task.date))\n          });\n        } while (!sameDay(d1, d2));\n\n        return { // Update state\n          ...state,\n          date: date,\n          days: days\n        };\n\n      case SET_TASK:\n        return { ...state,\n          task: action.payload\n        };\n\n      case SAVE_TASK:\n        {\n          let db = getDatabase();\n          const task = action.payload;\n\n          if (!task.id) {\n            // new Task\n            task.id = uuidv4();\n            db.push(task);\n          } else {\n            db = db.map(t => {\n              return t.id === task.id ? task : t;\n            });\n          }\n\n          setDatabase(db);\n          return { ...state\n          };\n        }\n\n      case DELETE_TASK:\n        {\n          let db = getDatabase();\n          db = db.filter(task => {\n            return task.id !== action.payload;\n          });\n          setDatabase(db);\n          return { ...state\n          };\n        }\n\n      default:\n        break;\n    }\n  }, initialState);\n\n  const setDate = date => {\n    dispatch({\n      type: SET_DATE,\n      payload: date\n    });\n  };\n\n  const setTask = task => {\n    dispatch({\n      type: SET_TASK,\n      payload: task\n    });\n  };\n\n  const saveTask = task => {\n    dispatch({\n      type: SAVE_TASK,\n      payload: task\n    });\n  };\n\n  const deleteTask = taskId => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: taskId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CalendarContext.Provider, {\n    value: {\n      date: state.date,\n      days: state.days,\n      task: state.task,\n      setDate,\n      setTask,\n      saveTask,\n      deleteTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CalendarState;\nexport default CalendarState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarState\");","map":{"version":3,"sources":["C:/Users/liuni/Documents/GitHub/hido/src/context/CalendarContext.js"],"names":["React","createContext","useReducer","v4","uuidv4","SET_DATE","SET_TASK","SAVE_TASK","DELETE_TASK","getDatabase","db","localStorage","getItem","setDatabase","JSON","parse","map","task","date","Date","setItem","stringify","CalendarContext","sameDay","a","b","getDate","getMonth","getFullYear","CalendarState","props","initialState","days","state","dispatch","action","type","payload","d1","setDate","getDay","d2","push","getTime","tasks","filter","id","t","setTask","saveTask","deleteTask","taskId","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst SET_DATE = \"SET_DATE\";\r\nconst SET_TASK = \"SET_TASK\";\r\nconst SAVE_TASK = \"SAVE_TASK\";\r\nconst DELETE_TASK = \"DELETE_TASK\";\r\n\r\nconst getDatabase = ()=> {\r\n  let db = localStorage.getItem(\"$calendar_db\");\r\n  if(!db) {\r\n    db = [];\r\n    setDatabase(db);\r\n  } else {\r\n    db = JSON.parse(db);    \r\n    db.map(task=> task.date = new Date(task.date));\r\n  }\r\n  return db;\r\n}\r\n\r\nconst setDatabase = (db)=> {\r\n  localStorage.setItem(\"$calendar_db\", JSON.stringify(db));\r\n}\r\n\r\nexport const CalendarContext = createContext();\r\n\r\nexport const sameDay = (a, b) => {\r\n  return a.getDate()     === b.getDate()\r\n      && a.getMonth()    === b.getMonth()\r\n      && a.getFullYear() === b.getFullYear();\r\n}\r\n\r\nfunction CalendarState(props) {\r\n  \r\n  const initialState = {\r\n    date: new Date(),\r\n    days: [],\r\n    task: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case SET_DATE: // Set current date\r\n\r\n        const date = action.payload;\r\n        // Calendar Start Day\r\n        const d1 = new Date(date.getFullYear(), date.getMonth()    , 1);\r\n        d1.setDate(d1.getDate() - (d1.getDay() === 0 ? 7 : d1.getDay()));\r\n        // Calendart End Day\r\n        const d2 = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        if(d2.getDay() !== 0) d2.setDate(d2.getDate() + (7 - d2.getDay()));\r\n        \r\n        const db = getDatabase();\r\n  \r\n        const days = [];\r\n        do { // Obtain tasks\r\n          d1.setDate(d1.getDate() + 1); // iterate            \r\n          days.push({\r\n            date: new Date(d1.getTime()),\r\n            tasks: db.filter((task)=> sameDay(d1, task.date))\r\n          });\r\n        } while(!sameDay(d1, d2));\r\n      \r\n        return { // Update state\r\n          ...state,\r\n          date: date,\r\n          days: days\r\n        }\r\n      case SET_TASK: \r\n        return {\r\n          ...state,\r\n          task: action.payload\r\n        }\r\n      case SAVE_TASK: {\r\n        let db = getDatabase();\r\n        const task = action.payload;\r\n        if(!task.id) { // new Task\r\n          task.id = uuidv4();\r\n          db.push(task);\r\n        } else {\r\n          db = db.map(t=> {\r\n            return t.id === task.id ? task : t;\r\n          })\r\n        }\r\n        setDatabase(db);\r\n        return {\r\n          ...state\r\n        }\r\n      }\r\n      case DELETE_TASK : {\r\n        let db = getDatabase();\r\n        db = db.filter((task)=> {\r\n          return task.id !== action.payload;\r\n        });\r\n        setDatabase(db);\r\n        return {\r\n          ...state,\r\n        }\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }, initialState);\r\n\r\n\r\n  const setDate = (date)=> {\r\n    dispatch({\r\n      type: SET_DATE,\r\n      payload: date\r\n    });\r\n  }\r\n\r\n  const setTask = (task)=> {\r\n    dispatch({\r\n      type: SET_TASK,\r\n      payload: task\r\n    });\r\n  }\r\n\r\n  const saveTask = (task)=> {\r\n    dispatch({\r\n      type: SAVE_TASK,\r\n      payload: task\r\n    })\r\n  }\r\n\r\n  const deleteTask = (taskId)=> {\r\n    dispatch({\r\n      type: DELETE_TASK,\r\n      payload: taskId\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <CalendarContext.Provider\r\n      value={{\r\n\r\n        date: state.date,\r\n        days: state.days,\r\n        task: state.task,\r\n\r\n        setDate,\r\n        setTask,\r\n        saveTask,\r\n        deleteTask\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CalendarContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CalendarState;"]},"metadata":{},"sourceType":"module"}
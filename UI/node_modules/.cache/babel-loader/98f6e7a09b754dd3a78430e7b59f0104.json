{"ast":null,"code":"var _jsxFileName = \"/home/baymax/hido/UI/src/component/Day.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./todo/Form\";\nimport FilterButton from \"./todo/FilterButton\";\nimport Todo from \"./todo/Todo\";\nimport Set from \"./Set\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"../Day.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\n\nfunction jsonDateReviver(key, value) {\n  if (dateRegex.test(value)) return new Date(value);\n  return value;\n}\n\nasync function graphQLFetch(query) {\n  let variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    const response = await fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query,\n        variables\n      })\n    });\n    const body = await response.text();\n    const result = JSON.parse(body, jsonDateReviver);\n\n    if (result.errors) {\n      const error = result.errors[0];\n\n      if (error.extensions.code === 'BAD_USER_INPUT') {\n        const details = error.extensions.exception.errors.join('\\n ');\n        alert(`${error.message}:\\n ${details}`);\n      } else {\n        alert(`${error.extensions.code}: ${error.message}`);\n      }\n    }\n\n    return result.data;\n  } catch (e) {\n    alert(`Error in sending data to server: ${e.message}`);\n  }\n}\n\nasync function taskAdd(task) {\n  const query = `mutation myMutation($task:TaskInput!){\n    taskAdd(task: $task) {\n      id \n      name \n      priority\n    }\n  }`;\n  const data = await graphQLFetch(query, {\n    task\n  });\n}\n\nasync function taskDelete(taskID) {\n  const query = `mutation myMutation($taskID:String!){\n    taskDelete(taskID: $taskID) {\n    name\n    id }\n  }`;\n  const data = await graphQLFetch(query, {\n    taskID\n  });\n}\n\nasync function taskUpdate(task) {\n  const query = `mutation myMutation($task:TaskInput!){\n    taskUpdate(task: $task) {\n      id \n      name \n      priority\n    }\n  }`;\n  const data = await graphQLFetch(query, {\n    task\n  });\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Todo: task => task.status === \"To do\" || task.status === \"Doing\",\n  Done: task => task.status === \"Done\"\n};\nconst PRIORITY_MAP = {\n  \"Primary\": 1,\n  \"Urgent\": 2,\n  \"Normal\": 3,\n  \"No Rush\": 4\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction Day(props) {\n  _s();\n\n  const [filter, setFilter] = useState('All');\n  const [tasks, setTasks] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [sorted, setSorted] = useState(false);\n  const [sortedTasks, setSortedTasks] = useState([]);\n\n  const fetchData = async () => {\n    const query = `query {\n      taskList {\n        date, name, color, status, priority, comment, id,\n      }\n    }`;\n    const data = await graphQLFetch(query);\n    let tasks = data.taskList;\n    tasks.map(task => task.date = new Date(task.date));\n    setTasks(tasks);\n    return;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          status: task.status === \"Done\" ? \"To do\" : \"Done\"\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    const newTask = tasks.filter(task => {\n      return task.id === id;\n    }).map(task => {\n      return { ...task,\n        status: task.status === \"Done\" ? \"To do\" : \"Done\"\n      };\n    });\n    taskUpdate(newTask[0]);\n  }\n\n  function addTask(name, priority) {\n    const newTask = {\n      id: \"todo-\" + uuidv4(),\n      name: name,\n      status: \"To do\",\n      color: \"#d2635b\",\n      priority: priority,\n      comment: \"\",\n      date: startDate\n    };\n    taskAdd(newTask);\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    taskDelete(id);\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n    const newTask = tasks.filter(task => {\n      return task.id === id;\n    }).map(task => {\n      return { ...task,\n        name: newName\n      };\n    });\n    console.log(newTask[0]);\n    taskUpdate(newTask[0]);\n  }\n\n  function sortTask() {\n    setSortedTasks(tasks.map(task => {\n      task.idx = PRIORITY_MAP[task.priority];\n      return task;\n    }));\n    console.log(sortedTasks);\n    sortedTasks.sort((a, b) => a.idx > b.idx ? 1 : -1);\n    console.log(sortedTasks);\n    setSortedTasks(sortedTasks.map(task => {\n      delete task.idx;\n      return task;\n    }));\n    console.log(sortedTasks);\n  }\n\n  const sameDay = (a, b) => {\n    return a.getDate() === b.getDate() && a.getMonth() === b.getMonth() && a.getFullYear() === b.getFullYear();\n  };\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).filter(task => sameDay(startDate, task.date)).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    status: task.status,\n    priority: task.priority,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const formHeading = `${taskList.length} ${tasksNoun} left`;\n  const dateHeading = `${startDate.getMonth() + 1}-${startDate.getUTCDate()}-${startDate.getFullYear()} To do List`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    id: \"resize\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"function\",\n      style: {\n        margin: \"10px 20px 0px 600px\"\n      },\n      onClick: () => sortTask(),\n      children: \"Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"function\",\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"dateheading\",\n      id: \"dateheading\",\n      children: dateHeading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask,\n      startDate: startDate,\n      setStartDate: setStartDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      tabIndex: \"-1\",\n      children: formHeading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      id: \"task-display\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Day, \"6mfIAFslJ+iTy7e8zAW19wExp1E=\");\n\n_c2 = Day;\nexport default Day;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"Day\");","map":{"version":3,"sources":["/home/baymax/hido/UI/src/component/Day.js"],"names":["React","useState","useRef","useEffect","Form","FilterButton","Todo","Set","v4","uuidv4","DatePicker","dateRegex","RegExp","jsonDateReviver","key","value","test","Date","graphQLFetch","query","variables","response","fetch","method","headers","body","JSON","stringify","text","result","parse","errors","error","extensions","code","details","exception","join","alert","message","data","e","taskAdd","task","taskDelete","taskID","taskUpdate","FILTER_MAP","All","status","Done","PRIORITY_MAP","FILTER_NAMES","Object","keys","Day","props","filter","setFilter","tasks","setTasks","startDate","setStartDate","sorted","setSorted","sortedTasks","setSortedTasks","fetchData","taskList","map","date","toggleTaskCompleted","id","updatedTasks","newTask","addTask","name","priority","color","comment","deleteTask","remainingTasks","editTask","newName","editedTaskList","console","log","sortTask","idx","sort","a","b","sameDay","getDate","getMonth","getFullYear","filterList","tasksNoun","length","formHeading","dateHeading","getUTCDate","margin"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./todo/Form\";\nimport FilterButton from \"./todo/FilterButton\";\nimport Todo from \"./todo/Todo\";\nimport Set from \"./Set\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"../Day.css\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\n\nfunction jsonDateReviver(key, value) {\n  if (dateRegex.test(value)) return new Date(value);\n  return value;\n}\n\nasync function graphQLFetch(query, variables = {}) {\n  try {\n    const response = await fetch('http://localhost:5000/graphql', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify({ query, variables })\n    });\n    const body = await response.text();\n    const result = JSON.parse(body, jsonDateReviver);\n\n    if (result.errors) {\n      const error = result.errors[0];\n      if (error.extensions.code === 'BAD_USER_INPUT') {\n        const details = error.extensions.exception.errors.join('\\n ');\n        alert(`${error.message}:\\n ${details}`);\n      } else {\n        alert(`${error.extensions.code}: ${error.message}`);\n      }\n    }\n    return result.data;\n  } catch (e) {\n    alert(`Error in sending data to server: ${e.message}`);\n  }\n}\n\nasync function taskAdd(task) {\n  const query = `mutation myMutation($task:TaskInput!){\n    taskAdd(task: $task) {\n      id \n      name \n      priority\n    }\n  }`\n  const data = await graphQLFetch(query, {task});\n}\n\nasync function taskDelete(taskID) {\n  const query = `mutation myMutation($taskID:String!){\n    taskDelete(taskID: $taskID) {\n    name\n    id }\n  }`\n  const data = await graphQLFetch(query, {taskID});\n}\n\n\nasync function taskUpdate(task) {\n  const query = `mutation myMutation($task:TaskInput!){\n    taskUpdate(task: $task) {\n      id \n      name \n      priority\n    }\n  }`\n  const data = await graphQLFetch(query, {task});\n}\n\n\nconst FILTER_MAP = {\n  All: () => true,\n  Todo: task => task.status === \"To do\" || task.status === \"Doing\",\n  Done: task => task.status === \"Done\"\n};  \n\nconst PRIORITY_MAP = {\n  \"Primary\" : 1,\n  \"Urgent\" : 2,\n  \"Normal\" : 3,\n  \"No Rush\" : 4\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction Day(props) {\n  const [filter, setFilter] = useState('All');\n  const [tasks, setTasks] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [sorted, setSorted] = useState(false);\n  const [sortedTasks, setSortedTasks] = useState([]);\n\n\n  const fetchData = async() => {\n    const query = `query {\n      taskList {\n        date, name, color, status, priority, comment, id,\n      }\n    }`\n    const data = await graphQLFetch(query);\n    let tasks = data.taskList;\n    tasks.map(task=> task.date = new Date(task.date));\n    setTasks(tasks);\n    return;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); \n\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {   \n      if (id === task.id) {\n        return {...task, status: task.status === \"Done\" ? \"To do\": \"Done\" }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    const newTask = tasks.filter(task => {return task.id === id})\n    .map(task => {return {...task, status: task.status === \"Done\" ? \"To do\": \"Done\"}});\n    taskUpdate(newTask[0]);  \n  }\n\n  function addTask(name, priority) {\n    const newTask = { id: \"todo-\" + uuidv4(), name: name, status: \"To do\", color : \"#d2635b\", priority : priority, comment : \"\", date : startDate  };\n    taskAdd(newTask);\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    taskDelete(id);\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n    const newTask = tasks.filter(task => {return task.id === id}).map(task => {return {...task, name: newName}});\n    console.log(newTask[0]);\n    taskUpdate(newTask[0]);\n  }\n\n  function sortTask() {\n    setSortedTasks(tasks.map(task => {task.idx = PRIORITY_MAP[task.priority]; return task}));\n    console.log(sortedTasks);\n    sortedTasks.sort((a, b) => (a.idx > b.idx) ? 1 : -1);\n    console.log(sortedTasks);\n    setSortedTasks(sortedTasks.map(task => {\n      delete task.idx;  return task}));\n      console.log(sortedTasks);\n  } \n\n  const sameDay = (a, b) => {\n    return a.getDate()     === b.getDate()\n        && a.getMonth()    === b.getMonth()\n        && a.getFullYear() === b.getFullYear();\n  }\n  \n  const taskList = tasks\n  .filter(FILTER_MAP[filter]).filter(task=>sameDay(startDate, task.date))\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      status={task.status}\n      priority={task.priority}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n \n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const formHeading = `${taskList.length} ${tasksNoun} left`;\n  const dateHeading = `${startDate.getMonth()+1}-${startDate.getUTCDate()}-${startDate.getFullYear()} To do List`\n\n  return (\n    <div className=\"todoapp stack-large\" id = \"resize\">\n      <button className={\"function\"} style={{margin:\"10px 20px 0px 600px\"}} onClick={()=> sortTask()} >Sort</button>\n      <button className={\"function\"}>Export</button>\n      <h3 className=\"dateheading\" id=\"dateheading\" >{dateHeading}</h3>\n    \n      <Form addTask={addTask} startDate={startDate} setStartDate={setStartDate} />\n      \n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" >\n        {formHeading}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n        id=\"task-display\"\n      >\n        {taskList}\n      </ul>\n    </div>\n\n  );\n}\n\n\nexport default Day;\n"]},"metadata":{},"sourceType":"module"}